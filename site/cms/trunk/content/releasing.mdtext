Title: Releasing Apache Shindig
Notice:    Licensed to the Apache Software Foundation (ASF) under one
           or more contributor license agreements.  See the NOTICE file
           distributed with this work for additional information
           regarding copyright ownership.  The ASF licenses this file
           to you under the Apache License, Version 2.0 (the
           "License"); you may not use this file except in compliance
           with the License.  You may obtain a copy of the License at
           .
             http://www.apache.org/licenses/LICENSE-2.0
           .
           Unless required by applicable law or agreed to in writing,
           software distributed under the License is distributed on an
           "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
           KIND, either express or implied.  See the License for the
           specific language governing permissions and limitations
           under the License.

# Apache Shindig Release Process

This document describes how Apache Shindig's committers will make a release.

1. Release Discussions
2. Prepare The Release
3. Stage The Release
4. Deploy The Documentation
5. Propose A Vote
6. Publish The Release
7. Publish The Website
8. Announce The Release
9. Celebrate :o)
10. Notes
    
Notes:

1.  This process is based on the [Maven Release Process](http://maven.apache.org/developers/release/releasing.html). 
Please read it firstly for the prerequisites and technical notes.
2.  The items 2 to 5 should take you 1-2 hours, depending your machine and your Internet 
connection.
3.  Some of the build steps require more than the default amount of maven memory. 
You should set MAVEN_OPTS to a larger value, -Xmx512m seems to be sufficient.

##  1. Release Discussions

The starting point will be a consensus in the developer community about the release and the 
JIRA issues to include (or not) in the next release. Typically, the discussion will be 
on the [Dev List](mail-lists.html).

##  2. Prepare The Release

Duration: 20 min

Now that everybody in the community is happy to push a release, the release manager needs to 
verify the source code before to continue:

1.  Make sure there are no snapshots (less the current version) in the POMs to be released.
2.  Check that your POMs will not lose content when they are rewritten during the release process.
    *  mvn release:prepare -DdryRun=true -Papache-release
    *  Diff the original file pom.xml with the one called pom.xml.tag to see if the license or 
    any other info has been removed. The only things that should be different between these files 
    are the version and scm elements. Any other changes, you must backport yourself to the 
    original pom.xml file and commit before proceeding with the release.
    *  Verify that all Apache Shindig modules will be touched, including assembly and samples.

Next, prepare the release by calling Maven:

<pre>
mvn release:clean -Papache-release
mvn release:prepare -Papache-release
</pre>

Notes:

1.  -Papache-release is very important since assembly and samples modules are not included 
by default in the build (for productivity reasons).
2.  Preparing the release will create a new tag in SVN, automatically checking in on your 
behalf. Verify the SVN logs in the [Commit List](mail-lists.html) or review the generated tag.
3.  All license headers and legal files will be checked by RAT (Release Audit Tool).
4.  Instead of configuring your Maven environment to store your SVN credentials you can pass them on the command line, for example 
<pre>
mvn release:prepare -Papache-release -Dusername=username -Dpassword=password
</pre>

##  3. Stage The Release

Duration: 30 min

Call Maven to publish the generated artifacts:

<pre>
mvn release:perform -Papache-release
</pre>

Note: All artifacts will be signed and pushed to 
[https://repository.apache.org/](https://repository.apache.org/).

You can use the following command to download all the artifacts from the repository.

<pre>
wget -r  -H -t1 -nd -N -np  -erobots=off -i https://repository.apache.org/content/repositories/orgapacheshindig-{repo-id}/org/apache/shindig/
</pre>

Close the staging repository as described in the points 5 and 6 of the 
[Maven Release Process](http://maven.apache.org/developers/release/releasing.html).

##  4. Deploy The Documentation

Duration: 20 min

Call Maven to publish the generated technical site:

<pre>
cd target/checkout
mvn site -Preporting
mvn site:deploy
</pre>

Optional: [Update](documentation_website.html) the current website.

##  5. Propose A Vote

Start a release vote on the [Dev List](mail-lists.html). The vote must be aligned with 
the [Apache](http://www.apache.org/foundation/voting.html) vote process.

Typically, the mail should include the 
[Jira release notes](http://www.atlassian.com/software/jira/docs/latest/releasenotes.html), 
the staging repository URL and the site URL, for instance:

<pre>
To: "Shindig Developers List" <dev@shidnig.apache.org>
Subject: [VOTE] Release Apache Shindig version X.Y

Hi,

We solved N issues:
https://issues.apache.org/jira/secure/ReleaseNote.jspa?version=XXX&styleName=Html&projectId=12310741

There are still a couple of issues left in JIRA:
https://issues.apache.org/jira/secure/IssueNavigator.jspa?reset=true&pid=12310741&status=1

Staging repo:
https://repository.apache.org/content/repositories/shindig-staging-[YOUR REPOSITORY ID]/

Web site:
http://shindig.apache.org/

Vote open for 72 hours.

[ ] +1
[ ] +0
[ ] -1
</pre>

##  6. Publish The Release

Promote the release as described in the points 10 of the 
[Maven Release Process](http://maven.apache.org/developers/release/releasing.html).

Also, update Jira to specify the release date.

##  Publish The Website

[Update](documentation_website.html) the [download page](download.html).

##  8. Announce The Release

Create an announcement similar to:

<pre>
From: YOUR_APACHE_USERNAME@apache.org
To: announce@apache.org, dev@shindig.apache.org
Subject: [ANN] Apache Shindig X.Y Released

The Apache Shindig team is proud to announce the release
of Apache Shindig, version X.Y-incubating.

Apache Shindig is a JavaScript container and
implementations of the backend APIs and proxy required for hosting
OpenSocial applications.

http://shindig.apache.org/

Enjoy,

-The Apache Shindig Team
</pre>

##  9. Celebrate :o)

## 10. Notes

### Maven Configuration
In order to publish the release artifacts to the Apache Maven servers you need to configure your Maven settings so Maven
knows your Apache credentials.  Follow the documentation [here](http://www.apache.org/dev/publishing-maven-artifacts.html#dev-env) 
to configure Maven correctly.

### PHP Prerequisites
<span class="alert alert-error">The PHP version of Shindig has been moved to the attic, this is only kept here for
legacy reasons.</span>
If you are a Java developer who is building a Shindig release chances are you do not have the necessary PHP 
dependencies installed on your machine.  You will need to install and configure PHPUnit and mcrypt (as well as PHP) 
in order to run the PHP portion of the Shindig build.  The links below are useful
for Mac users, please add links for other OSes as people build on those platforms.

#### Mac
* [Installing PHPUnit](http://www.newmediacampaigns.com/page/install-pear-phpunit-xdebug-on-macosx-snow-leopard)
* [Installing mcrypt](http://www.coolestguyplanettech.com/how-to-install-mcrypt-for-php-on-mac-osx-lion-10-7-development-server/)