# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
# NLS_ENCODING=UNICODE
## G11N SA UI
# NLS_MESSAGEFORMAT_VAR


##AuthenticationServletFilter
errorParsingSecureToken=\u0e42\u0e17\u0e40\u0e04\u0e47\u0e19\u0e04\u0e27\u0e32\u0e21\u0e1b\u0e25\u0e2d\u0e14\u0e20\u0e31\u0e22\u0e2b\u0e23\u0e37\u0e2d\u0e2b\u0e19\u0e31\u0e07\u0e2a\u0e37\u0e2d\u0e23\u0e31\u0e1a\u0e23\u0e2d\u0e07\u0e1c\u0e34\u0e14\u0e23\u0e39\u0e1b\u0e41\u0e1a\u0e1a\u0e41\u0e25\u0e30\u0e44\u0e21\u0e48\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e27\u0e34\u0e40\u0e04\u0e23\u0e32\u0e30\u0e2b\u0e4c\u0e04\u0e33\u0e44\u0e14\u0e49

##XmlUtil
errorParsingXML=\u0e02\u0e49\u0e2d\u0e1c\u0e34\u0e14\u0e1e\u0e25\u0e32\u0e14\u0e43\u0e19\u0e01\u0e32\u0e23\u0e27\u0e34\u0e40\u0e04\u0e23\u0e32\u0e30\u0e2b\u0e4c XML \u0e0b\u0e36\u0e48\u0e07\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e25\u0e30\u0e40\u0e27\u0e49\u0e19\u0e44\u0e14\u0e49
errorParsingExternalGeneralEntities=\u0e15\u0e31\u0e27\u0e1b\u0e23\u0e30\u0e21\u0e27\u0e25\u0e1c\u0e25 XML \u0e17\u0e35\u0e48\u0e16\u0e39\u0e01\u0e43\u0e0a\u0e49\u0e08\u0e30\u0e42\u0e2b\u0e25\u0e14\u0e40\u0e2d\u0e19\u0e17\u0e34\u0e15\u0e35\u0e17\u0e31\u0e48\u0e27\u0e44\u0e1b\u0e20\u0e32\u0e22\u0e19\u0e2d\u0e01
errorParsingExternalParameterEntities=\u0e15\u0e31\u0e27\u0e1b\u0e23\u0e30\u0e21\u0e27\u0e25\u0e1c\u0e25 XML \u0e17\u0e35\u0e48\u0e16\u0e39\u0e01\u0e43\u0e0a\u0e49\u0e08\u0e30\u0e42\u0e2b\u0e25\u0e14\u0e40\u0e2d\u0e19\u0e17\u0e34\u0e15\u0e35\u0e1e\u0e32\u0e23\u0e32\u0e21\u0e34\u0e40\u0e15\u0e2d\u0e23\u0e4c\u0e20\u0e32\u0e22\u0e19\u0e2d\u0e01
errorParsingExternalDTD=\u0e15\u0e31\u0e27\u0e1b\u0e23\u0e30\u0e21\u0e27\u0e25\u0e1c\u0e25 XML \u0e17\u0e35\u0e48\u0e16\u0e39\u0e01\u0e43\u0e0a\u0e49\u0e08\u0e30\u0e42\u0e2b\u0e25\u0e14 Document Type Definitions (DTD)
errorNotUsingSecureXML=\u0e15\u0e31\u0e27\u0e1b\u0e23\u0e30\u0e21\u0e27\u0e25\u0e1c\u0e25 XML \u0e17\u0e35\u0e48\u0e16\u0e39\u0e01\u0e43\u0e0a\u0e49\u0e08\u0e30\u0e44\u0e21\u0e48\u0e44\u0e14\u0e49\u0e23\u0e31\u0e1a\u0e01\u0e32\u0e23\u0e2a\u0e19\u0e31\u0e1a\u0e2a\u0e19\u0e38\u0e19\u0e43\u0e19\u0e01\u0e32\u0e23\u0e27\u0e34\u0e40\u0e04\u0e23\u0e32\u0e30\u0e2b\u0e4c\u0e04\u0e27\u0e32\u0e21\u0e1b\u0e25\u0e2d\u0e14\u0e20\u0e31\u0e22
reuseDocumentBuilders=\u0e15\u0e31\u0e27\u0e2a\u0e23\u0e49\u0e32\u0e07\u0e40\u0e2d\u0e01\u0e2a\u0e32\u0e23\u0e16\u0e39\u0e01\u0e19\u0e33\u0e01\u0e25\u0e31\u0e1a\u0e21\u0e32\u0e43\u0e0a\u0e49
notReuseDocBuilders=\u0e15\u0e31\u0e27\u0e2a\u0e23\u0e49\u0e32\u0e07\u0e40\u0e2d\u0e01\u0e2a\u0e32\u0e23\u0e44\u0e21\u0e48\u0e44\u0e14\u0e49\u0e16\u0e39\u0e01\u0e19\u0e33\u0e01\u0e25\u0e31\u0e1a\u0e21\u0e32\u0e43\u0e0a\u0e49

##LruCacheProvider
LRUCapacity=\u0e04\u0e27\u0e32\u0e21\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e17\u0e35\u0e48\u0e43\u0e0a\u0e49\u0e19\u0e49\u0e2d\u0e22\u0e17\u0e35\u0e48\u0e2a\u0e38\u0e14\u0e40\u0e21\u0e37\u0e48\u0e2d\u0e40\u0e23\u0e47\u0e27\u0e46 \u0e19\u0e35\u0e49 (LRU) {0} \u0e16\u0e39\u0e01\u0e01\u0e33\u0e2b\u0e19\u0e14\u0e44\u0e27\u0e49\u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a {1}

##DynamicConfigProperty
evalExpressionFailed={0} \u0e44\u0e21\u0e48\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e1b\u0e23\u0e30\u0e40\u0e21\u0e34\u0e19\u0e1c\u0e25\u0e44\u0e14\u0e49

##JsonContainerConfigLoader
readingContainerConfig=\u0e04\u0e2d\u0e19\u0e1f\u0e34\u0e01\u0e39\u0e40\u0e23\u0e0a\u0e31\u0e19\u0e04\u0e2d\u0e19\u0e40\u0e17\u0e19\u0e40\u0e19\u0e2d\u0e23\u0e4c {0} \u0e01\u0e33\u0e25\u0e31\u0e07\u0e16\u0e39\u0e01\u0e2d\u0e48\u0e32\u0e19
loadFromString={0} \u0e44\u0e21\u0e48\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e27\u0e34\u0e40\u0e04\u0e23\u0e32\u0e30\u0e2b\u0e4c\u0e04\u0e33\u0e44\u0e14\u0e49

##JsonContainerConfigLoader, FeatureRegistry
loadResourcesFrom=\u0e23\u0e35\u0e0b\u0e2d\u0e23\u0e4c\u0e2a\u0e08\u0e32\u0e01 {0} \u0e01\u0e33\u0e25\u0e31\u0e07\u0e42\u0e2b\u0e25\u0e14

##JsonContainerConfigLoader, FeatureRegistry
loadFilesFrom=\u0e44\u0e1f\u0e25\u0e4c\u0e08\u0e32\u0e01 {0} \u0e01\u0e33\u0e25\u0e31\u0e07\u0e42\u0e2b\u0e25\u0e14

##ApiServlet
apiServletProtocolException=\u0e02\u0e49\u0e2d\u0e1c\u0e34\u0e14\u0e1e\u0e25\u0e32\u0e14\u0e43\u0e19\u0e01\u0e32\u0e23\u0e15\u0e2d\u0e1a\u0e01\u0e25\u0e31\u0e1a\u0e16\u0e39\u0e01\u0e2a\u0e48\u0e07\u0e04\u0e37\u0e19\u0e40\u0e19\u0e37\u0e48\u0e2d\u0e07\u0e08\u0e32\u0e01\u0e40\u0e01\u0e34\u0e14\u0e02\u0e49\u0e2d\u0e22\u0e01\u0e40\u0e27\u0e49\u0e19\u0e40\u0e01\u0e35\u0e48\u0e22\u0e27\u0e01\u0e31\u0e1a\u0e42\u0e1b\u0e23\u0e42\u0e15\u0e04\u0e2d\u0e25
apiServletException=\u0e02\u0e49\u0e2d\u0e1c\u0e34\u0e14\u0e1e\u0e25\u0e32\u0e14\u0e43\u0e19\u0e01\u0e32\u0e23\u0e15\u0e2d\u0e1a\u0e01\u0e25\u0e31\u0e1a\u0e16\u0e39\u0e01\u0e2a\u0e48\u0e07\u0e04\u0e37\u0e19\u0e40\u0e19\u0e37\u0e48\u0e2d\u0e07\u0e08\u0e32\u0e01\u0e40\u0e01\u0e34\u0e14\u0e02\u0e49\u0e2d\u0e22\u0e01\u0e40\u0e27\u0e49\u0e19\u0e40\u0e01\u0e35\u0e48\u0e22\u0e27\u0e01\u0e31\u0e1a\u0e42\u0e1b\u0e23\u0e42\u0e15\u0e04\u0e2d\u0e25

##FeatureRegistry
overridingFeature=\u0e04\u0e38\u0e13\u0e25\u0e31\u0e01\u0e29\u0e13\u0e30 {0} \u0e14\u0e49\u0e27\u0e22\u0e19\u0e34\u0e22\u0e32\u0e21\u0e17\u0e35\u0e48 {1} \u0e16\u0e39\u0e01\u0e41\u0e17\u0e19\u0e17\u0e31\u0e1a

##FeatureResourceLoader
missingFile=\u0e44\u0e1f\u0e25\u0e4c {0} \u0e16\u0e39\u0e01\u0e43\u0e0a\u0e49\u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e43\u0e2b\u0e49\u0e21\u0e35\u0e2d\u0e22\u0e39\u0e48\u0e41\u0e15\u0e48\u0e15\u0e2d\u0e19\u0e19\u0e35\u0e49\u0e2b\u0e32\u0e22\u0e44\u0e1b
unableRetrieveLib=\u0e44\u0e25\u0e1a\u0e23\u0e32\u0e23\u0e35\u0e41\u0e1a\u0e1a\u0e23\u0e35\u0e42\u0e21\u0e15\u0e08\u0e32\u0e01 {0} \u0e44\u0e21\u0e48\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e14\u0e36\u0e07\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e44\u0e14\u0e49

##BasicHttpFetcher
timeoutException={0} \u0e2b\u0e21\u0e14\u0e40\u0e27\u0e25\u0e32\u0e43\u0e0a\u0e49\u0e07\u0e32\u0e19\u0e40\u0e19\u0e37\u0e48\u0e2d\u0e07\u0e08\u0e32\u0e01\u0e40\u0e01\u0e34\u0e14\u0e02\u0e49\u0e2d\u0e22\u0e01\u0e40\u0e27\u0e49\u0e19\u0e15\u0e48\u0e2d\u0e44\u0e1b\u0e19\u0e35\u0e49: {1} - {2} - {3} ms
exceptionOccurred=\u0e02\u0e49\u0e2d\u0e22\u0e01\u0e40\u0e27\u0e49\u0e19\u0e15\u0e48\u0e2d\u0e44\u0e1b\u0e19\u0e35\u0e49\u0e40\u0e01\u0e34\u0e14\u0e02\u0e36\u0e49\u0e19\u0e40\u0e21\u0e37\u0e48\u0e2d\u0e14\u0e36\u0e07 {0}: {1} ms \u0e17\u0e35\u0e48\u0e43\u0e0a\u0e49
slowResponse={0} \u0e01\u0e33\u0e25\u0e31\u0e07\u0e15\u0e2d\u0e1a\u0e2a\u0e19\u0e2d\u0e07\u0e0a\u0e49\u0e32\u0e25\u0e07 {1} ms \u0e17\u0e35\u0e48\u0e43\u0e0a\u0e49

##HttpResponseMetadataHelper
errorGettingMD5=\u0e40\u0e01\u0e34\u0e14\u0e02\u0e49\u0e2d\u0e1c\u0e34\u0e14\u0e1e\u0e25\u0e32\u0e14\u0e40\u0e21\u0e37\u0e48\u0e2d\u0e44\u0e14\u0e49\u0e23\u0e31\u0e1a Message Digest 5 (MD5) \u0e02\u0e49\u0e2d\u0e1c\u0e34\u0e14\u0e1e\u0e25\u0e32\u0e14\u0e16\u0e39\u0e01\u0e25\u0e30\u0e40\u0e27\u0e49\u0e19
errorParsingMD5=\u0e40\u0e01\u0e34\u0e14\u0e02\u0e49\u0e2d\u0e1c\u0e34\u0e14\u0e1e\u0e25\u0e32\u0e14\u0e40\u0e21\u0e37\u0e48\u0e2d\u0e27\u0e34\u0e40\u0e04\u0e23\u0e32\u0e30\u0e2b\u0e4c\u0e04\u0e33\u0e2a\u0e15\u0e23\u0e34\u0e07 Message Digest 5 (MD5) \u0e43\u0e19\u0e23\u0e39\u0e1b\u0e41\u0e1a\u0e1a UTF-8

##OAuthModule
usingRandomKey=\u0e04\u0e35\u0e22\u0e4c\u0e41\u0e1a\u0e1a\u0e2a\u0e38\u0e48\u0e21\u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a\u0e01\u0e32\u0e23\u0e40\u0e02\u0e49\u0e32\u0e23\u0e2b\u0e31\u0e2a\u0e2a\u0e16\u0e32\u0e19\u0e30 OAuth \u0e43\u0e19\u0e1d\u0e31\u0e48\u0e07\u0e44\u0e04\u0e25\u0e40\u0e2d\u0e47\u0e19\u0e15\u0e4c\u0e16\u0e39\u0e01\u0e19\u0e33\u0e21\u0e32\u0e43\u0e0a\u0e49
usingFile=\u0e44\u0e1f\u0e25\u0e4c {0} \u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a\u0e01\u0e32\u0e23\u0e40\u0e02\u0e49\u0e32\u0e23\u0e2b\u0e31\u0e2a\u0e2a\u0e16\u0e32\u0e19\u0e30 OAuth \u0e43\u0e19\u0e1d\u0e31\u0e48\u0e07\u0e44\u0e04\u0e25\u0e40\u0e2d\u0e47\u0e19\u0e15\u0e4c\u0e16\u0e39\u0e01\u0e19\u0e33\u0e21\u0e32\u0e43\u0e0a\u0e49
loadKeyFileFrom=\u0e04\u0e35\u0e22\u0e4c\u0e01\u0e32\u0e23\u0e25\u0e07\u0e19\u0e32\u0e21 OAuth \u0e08\u0e32\u0e01 {0} \u0e01\u0e33\u0e25\u0e31\u0e07\u0e42\u0e2b\u0e25\u0e14
couldNotLoadKeyFile= \u0e04\u0e35\u0e22\u0e4c\u0e44\u0e1f\u0e25\u0e4c {0} \u0e44\u0e21\u0e48\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e42\u0e2b\u0e25\u0e14\u0e44\u0e14\u0e49
couldNotLoadSignedKey=\u0e04\u0e35\u0e22\u0e4c\u0e01\u0e32\u0e23\u0e25\u0e07\u0e19\u0e32\u0e21 OAuth \u0e44\u0e21\u0e48\u0e44\u0e14\u0e49\u0e42\u0e2b\u0e25\u0e14\u0e44\u0e27\u0e49\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e16\u0e39\u0e01\u0e15\u0e49\u0e2d\u0e07 \u0e2b\u0e32\u0e01\u0e15\u0e49\u0e2d\u0e07\u0e01\u0e32\u0e23\u0e2a\u0e23\u0e49\u0e32\u0e07\u0e04\u0e35\u0e22\u0e4c: \n 1. \u0e23\u0e31\u0e19\u0e04\u0e33\u0e2a\u0e31\u0e48\u0e07\u0e15\u0e48\u0e2d\u0e44\u0e1b\u0e19\u0e35\u0e49: \n openssl req -newkey rsa:1024 -days 365 -nodes -x509 -keyout testkey.pem \\\n -out testkey.pem -subj ''/CN=mytestkey''\n openssl pkcs8 -in testkey.pem -out oauthkey.pem -topk8 -nocrypt -outform PEM\n\n. 2. \u0e41\u0e01\u0e49\u0e44\u0e02\u0e44\u0e1f\u0e25\u0e4c shindig.properties \u0e42\u0e14\u0e22\u0e40\u0e1e\u0e34\u0e48\u0e21\u0e1a\u0e23\u0e23\u0e17\u0e31\u0e14\u0e40\u0e2b\u0e25\u0e48\u0e32\u0e19\u0e35\u0e49: \n{0} =<path-to-oauthkey.pem>\n {1} =mykey\n.
failedToInit=\u0e04\u0e2d\u0e19\u0e0b\u0e39\u0e21\u0e40\u0e21\u0e2d\u0e23\u0e4c OAuth \u0e08\u0e32\u0e01 {0} \u0e25\u0e49\u0e21\u0e40\u0e2b\u0e25\u0e27\u0e43\u0e19\u0e01\u0e32\u0e23\u0e40\u0e15\u0e23\u0e35\u0e22\u0e21\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e40\u0e1a\u0e37\u0e49\u0e2d\u0e07\u0e15\u0e49\u0e19

##OAuthRequest
oauthFetchFatalError=\u0e02\u0e49\u0e2d\u0e1c\u0e34\u0e14\u0e1e\u0e25\u0e32\u0e14\u0e23\u0e38\u0e19\u0e41\u0e23\u0e07\u0e15\u0e48\u0e2d\u0e44\u0e1b\u0e19\u0e35\u0e49\u0e40\u0e01\u0e34\u0e14\u0e02\u0e36\u0e49\u0e19\u0e40\u0e21\u0e37\u0e48\u0e2d OAuth \u0e01\u0e33\u0e25\u0e31\u0e07\u0e14\u0e36\u0e07\u0e40\u0e19\u0e37\u0e49\u0e2d\u0e2b\u0e32: \n {0}
oauthFetchErrorReprompt=\u0e02\u0e49\u0e2d\u0e1c\u0e34\u0e14\u0e1e\u0e25\u0e32\u0e14\u0e15\u0e48\u0e2d\u0e44\u0e1b\u0e19\u0e35\u0e49\u0e40\u0e01\u0e34\u0e14\u0e02\u0e36\u0e49\u0e19\u0e40\u0e21\u0e37\u0e48\u0e2d OAuth \u0e01\u0e33\u0e25\u0e31\u0e07\u0e14\u0e36\u0e07\u0e40\u0e19\u0e37\u0e49\u0e2d\u0e2b\u0e32: \n {0} \u0e1c\u0e39\u0e49\u0e43\u0e0a\u0e49\u0e44\u0e14\u0e49\u0e23\u0e31\u0e1a\u0e1e\u0e23\u0e49\u0e2d\u0e21\u0e15\u0e4c\u0e2d\u0e35\u0e01\u0e04\u0e23\u0e31\u0e49\u0e07\u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e2d\u0e19\u0e38\u0e21\u0e31\u0e15\u0e34
bogusExpired=\u0e40\u0e0b\u0e34\u0e23\u0e4c\u0e1f\u0e40\u0e27\u0e2d\u0e23\u0e4c\u0e2a\u0e48\u0e07\u0e04\u0e37\u0e19\u0e01\u0e32\u0e23\u0e2b\u0e21\u0e14\u0e2d\u0e32\u0e22\u0e38\u0e44\u0e21\u0e48\u0e16\u0e39\u0e01\u0e15\u0e49\u0e2d\u0e07:\n {0}
oauthFetchUnexpectedError=\u0e02\u0e49\u0e2d\u0e1c\u0e34\u0e14\u0e1e\u0e25\u0e32\u0e14\u0e23\u0e38\u0e19\u0e41\u0e23\u0e07\u0e15\u0e48\u0e2d\u0e44\u0e1b\u0e19\u0e35\u0e49\u0e40\u0e01\u0e34\u0e14\u0e02\u0e36\u0e49\u0e19\u0e40\u0e21\u0e37\u0e48\u0e2d OAuth \u0e01\u0e33\u0e25\u0e31\u0e07\u0e14\u0e36\u0e07\u0e40\u0e19\u0e37\u0e49\u0e2d\u0e2b\u0e32: \n {0}.
unauthenticatedOauth=OAuth \u0e44\u0e21\u0e48\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e14\u0e36\u0e07\u0e40\u0e19\u0e37\u0e49\u0e2d\u0e2b\u0e32\u0e44\u0e14\u0e49\u0e40\u0e19\u0e37\u0e48\u0e2d\u0e07\u0e08\u0e32\u0e01\u0e01\u0e32\u0e23\u0e1e\u0e34\u0e2a\u0e39\u0e08\u0e19\u0e4c\u0e15\u0e31\u0e27\u0e15\u0e19\u0e1c\u0e39\u0e49\u0e43\u0e0a\u0e49\u0e44\u0e21\u0e48\u0e21\u0e35\u0e2d\u0e22\u0e39\u0e48 \u0e40\u0e01\u0e34\u0e14\u0e02\u0e49\u0e2d\u0e1c\u0e34\u0e14\u0e1e\u0e25\u0e32\u0e14\u0e15\u0e48\u0e2d\u0e44\u0e1b\u0e19\u0e35\u0e49: \n {0}.
invalidOauth=OAuth \u0e44\u0e21\u0e48\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e14\u0e36\u0e07\u0e40\u0e19\u0e37\u0e49\u0e2d\u0e2b\u0e32\u0e44\u0e14\u0e49\u0e40\u0e19\u0e37\u0e48\u0e2d\u0e07\u0e08\u0e32\u0e01\u0e04\u0e33\u0e23\u0e49\u0e2d\u0e07\u0e02\u0e2d\u0e44\u0e21\u0e48\u0e16\u0e39\u0e01\u0e15\u0e49\u0e2d\u0e07 \u0e40\u0e01\u0e34\u0e14\u0e02\u0e49\u0e2d\u0e1c\u0e34\u0e14\u0e1e\u0e25\u0e32\u0e14\u0e15\u0e48\u0e2d\u0e44\u0e1b\u0e19\u0e35\u0e49: \n {0}.

##CajaCssSanitizer
failedToParse=\u0e2a\u0e44\u0e15\u0e25\u0e4c\u0e0a\u0e35\u0e15\u0e44\u0e21\u0e48\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e27\u0e34\u0e40\u0e04\u0e23\u0e32\u0e30\u0e2b\u0e4c\u0e04\u0e33\u0e44\u0e14\u0e49
unableToConvertScript=\u0e42\u0e2b\u0e19\u0e14\u0e2a\u0e04\u0e23\u0e34\u0e1b\u0e15\u0e4c\u0e44\u0e21\u0e48\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e41\u0e1b\u0e25\u0e07\u0e40\u0e1b\u0e47\u0e19\u0e41\u0e17\u0e47\u0e01 OpenSocial Markup Language (OSML) \u0e44\u0e14\u0e49

##PipelineExecutor
errorPreloading=\u0e40\u0e01\u0e34\u0e14\u0e02\u0e49\u0e2d\u0e1c\u0e34\u0e14\u0e1e\u0e25\u0e32\u0e14\u0e17\u0e35\u0e48\u0e44\u0e21\u0e48\u0e04\u0e32\u0e14\u0e04\u0e34\u0e14\u0e02\u0e36\u0e49\u0e19\u0e40\u0e21\u0e37\u0e48\u0e2d\u0e17\u0e33\u0e01\u0e32\u0e23\u0e42\u0e2b\u0e25\u0e14\u0e01\u0e48\u0e2d\u0e19

##Processor
renderBlacklistedGadget=\u0e23\u0e30\u0e1a\u0e1a\u0e1e\u0e22\u0e32\u0e22\u0e32\u0e21\u0e2a\u0e23\u0e49\u0e32\u0e07\u0e01\u0e32\u0e23\u0e41\u0e2a\u0e14\u0e07\u0e1c\u0e25\u0e41\u0e01\u0e14\u0e40\u0e08\u0e47\u0e15\u0e17\u0e35\u0e48\u0e2d\u0e22\u0e39\u0e48\u0e43\u0e19\u0e23\u0e32\u0e22\u0e0a\u0e37\u0e48\u0e2d\u0e04\u0e27\u0e32\u0e21\u0e44\u0e21\u0e48\u0e19\u0e48\u0e32\u0e40\u0e0a\u0e37\u0e48\u0e2d\u0e16\u0e37\u0e2d: {0}.

##CajaResponseRewriter, CajaContentRewriter
failedToRetrieve={0} \u0e44\u0e21\u0e48\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e14\u0e36\u0e07\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e44\u0e14\u0e49
failedToRead={0} \u0e44\u0e21\u0e48\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e2d\u0e48\u0e32\u0e19\u0e44\u0e14\u0e49

##DefaultServiceFetcher
httpErrorFetching=\u0e40\u0e01\u0e34\u0e14\u0e02\u0e49\u0e2d\u0e1c\u0e34\u0e14\u0e1e\u0e25\u0e32\u0e14\u0e40\u0e01\u0e35\u0e48\u0e22\u0e27\u0e01\u0e31\u0e1a HTTP {0} \u0e02\u0e36\u0e49\u0e19\u0e40\u0e21\u0e37\u0e48\u0e2d\u0e14\u0e36\u0e07\u0e40\u0e21\u0e18\u0e2d\u0e14\u0e02\u0e2d\u0e07\u0e40\u0e0b\u0e2d\u0e23\u0e4c\u0e27\u0e34\u0e2a\u0e08\u0e32\u0e01\u0e08\u0e38\u0e14\u0e1b\u0e25\u0e32\u0e22 {1}
failedToFetchService=\u0e40\u0e21\u0e18\u0e2d\u0e14\u0e02\u0e2d\u0e07\u0e40\u0e0b\u0e2d\u0e23\u0e4c\u0e27\u0e34\u0e2a\u0e08\u0e32\u0e01\u0e08\u0e38\u0e14\u0e1b\u0e25\u0e32\u0e22 {0} \u0e44\u0e21\u0e48\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e14\u0e36\u0e07\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e44\u0e14\u0e49 \u0e40\u0e01\u0e34\u0e14\u0e02\u0e49\u0e2d\u0e1c\u0e34\u0e14\u0e1e\u0e25\u0e32\u0e14\u0e15\u0e48\u0e2d\u0e44\u0e1b\u0e19\u0e35\u0e49: {1}.
failedToParseService=\u0e40\u0e21\u0e18\u0e2d\u0e14\u0e02\u0e2d\u0e07\u0e40\u0e0b\u0e2d\u0e23\u0e4c\u0e27\u0e34\u0e2a\u0e08\u0e32\u0e01\u0e08\u0e38\u0e14\u0e1b\u0e25\u0e32\u0e22 {0} \u0e44\u0e21\u0e48\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e27\u0e34\u0e40\u0e04\u0e23\u0e32\u0e30\u0e2b\u0e4c\u0e04\u0e33\u0e44\u0e14\u0e49 \u0e40\u0e01\u0e34\u0e14\u0e02\u0e49\u0e2d\u0e1c\u0e34\u0e14\u0e1e\u0e25\u0e32\u0e14\u0e15\u0e48\u0e2d\u0e44\u0e1b\u0e19\u0e35\u0e49: {1}

##Renderer
FailedToRender=\u0e41\u0e01\u0e14\u0e40\u0e08\u0e47\u0e15\u0e17\u0e35\u0e48 {0} \u0e44\u0e21\u0e48\u0e44\u0e14\u0e49\u0e2a\u0e23\u0e49\u0e32\u0e07\u0e01\u0e32\u0e23\u0e41\u0e2a\u0e14\u0e07\u0e1c\u0e25 \u0e40\u0e01\u0e34\u0e14\u0e02\u0e49\u0e2d\u0e1c\u0e34\u0e14\u0e1e\u0e25\u0e32\u0e14\u0e15\u0e48\u0e2d\u0e44\u0e1b\u0e19\u0e35\u0e49: {1}

##RenderingGadgetRewriter
unknownFeatures=\u0e04\u0e38\u0e13\u0e25\u0e31\u0e01\u0e29\u0e13\u0e30\u0e15\u0e31\u0e49\u0e07\u0e41\u0e15\u0e48\u0e2b\u0e19\u0e36\u0e48\u0e07\u0e02\u0e49\u0e2d\u0e02\u0e36\u0e49\u0e19\u0e44\u0e1b\u0e21\u0e35\u0e2d\u0e22\u0e39\u0e48\u0e43\u0e19 extern &libs=: {0}
unexpectedErrorPreloading=\u0e40\u0e01\u0e34\u0e14\u0e02\u0e49\u0e2d\u0e1c\u0e34\u0e14\u0e1e\u0e25\u0e32\u0e14\u0e17\u0e35\u0e48\u0e44\u0e21\u0e48\u0e04\u0e32\u0e14\u0e04\u0e34\u0e14\u0e02\u0e36\u0e49\u0e19\u0e40\u0e21\u0e37\u0e48\u0e2d\u0e17\u0e33\u0e01\u0e32\u0e23\u0e42\u0e2b\u0e25\u0e14\u0e41\u0e01\u0e14\u0e40\u0e08\u0e47\u0e15\u0e01\u0e48\u0e2d\u0e19

##SanitizingResponseRewriter
requestToSanitizeWithoutContent=\u0e2d\u0e2d\u0e01\u0e04\u0e33\u0e23\u0e49\u0e2d\u0e07\u0e02\u0e2d\u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e1b\u0e49\u0e2d\u0e07\u0e01\u0e31\u0e19\u0e44\u0e21\u0e48\u0e43\u0e2b\u0e49\u0e40\u0e01\u0e34\u0e14\u0e1b\u0e31\u0e0d\u0e2b\u0e32\u0e42\u0e14\u0e22\u0e44\u0e21\u0e48\u0e21\u0e35\u0e0a\u0e19\u0e34\u0e14\u0e40\u0e19\u0e37\u0e49\u0e2d\u0e2b\u0e32\u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a {0}
requestToSanitizeUnknownContent=\u0e2d\u0e2d\u0e01\u0e04\u0e33\u0e23\u0e49\u0e2d\u0e07\u0e02\u0e2d\u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e1b\u0e49\u0e2d\u0e07\u0e01\u0e31\u0e19\u0e44\u0e21\u0e48\u0e43\u0e2b\u0e49\u0e40\u0e01\u0e34\u0e14\u0e1b\u0e31\u0e0d\u0e2b\u0e32\u0e42\u0e14\u0e22\u0e44\u0e21\u0e48\u0e21\u0e35\u0e0a\u0e19\u0e34\u0e14\u0e40\u0e19\u0e37\u0e49\u0e2d\u0e2b\u0e32\u0e17\u0e35\u0e48\u0e23\u0e39\u0e49\u0e08\u0e31\u0e01 {0} \u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a {1}
unableToSanitizeUnknownImg=\u0e44\u0e21\u0e48\u0e23\u0e39\u0e49\u0e08\u0e31\u0e01\u0e0a\u0e19\u0e34\u0e14\u0e2d\u0e34\u0e21\u0e40\u0e21\u0e08 {0} \u0e41\u0e25\u0e30\u0e44\u0e21\u0e48\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e1b\u0e49\u0e2d\u0e07\u0e01\u0e31\u0e19\u0e44\u0e21\u0e48\u0e43\u0e2b\u0e49\u0e40\u0e01\u0e34\u0e14\u0e1b\u0e31\u0e0d\u0e2b\u0e32\u0e44\u0e14\u0e49
unableToDetectImgType=\u0e0a\u0e19\u0e34\u0e14\u0e2d\u0e34\u0e21\u0e40\u0e21\u0e08\u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a {0} \u0e44\u0e21\u0e48\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e15\u0e23\u0e27\u0e08\u0e1e\u0e1a\u0e44\u0e14\u0e49\u0e40\u0e21\u0e37\u0e48\u0e2d\u0e1b\u0e49\u0e2d\u0e07\u0e01\u0e31\u0e19\u0e44\u0e21\u0e48\u0e43\u0e2b\u0e49\u0e40\u0e01\u0e34\u0e14\u0e1b\u0e31\u0e0d\u0e2b\u0e32\u0e01\u0e31\u0e1a\u0e40\u0e19\u0e37\u0e49\u0e2d\u0e2b\u0e32

##BasicImageRewriter
ioErrorRewritingImg=\u0e02\u0e49\u0e2d\u0e1c\u0e34\u0e14\u0e1e\u0e25\u0e32\u0e14\u0e40\u0e01\u0e35\u0e48\u0e22\u0e27\u0e01\u0e31\u0e1a\u0e2d\u0e34\u0e19\u0e1e\u0e38\u0e15/\u0e40\u0e2d\u0e32\u0e15\u0e4c\u0e1e\u0e38\u0e15\u0e15\u0e48\u0e2d\u0e44\u0e1b\u0e19\u0e35\u0e49\u0e40\u0e01\u0e34\u0e14\u0e02\u0e36\u0e49\u0e19\u0e02\u0e13\u0e30\u0e40\u0e02\u0e35\u0e22\u0e19\u0e2d\u0e34\u0e21\u0e40\u0e21\u0e08 {0} \u0e43\u0e2b\u0e21\u0e48\u0e2d\u0e35\u0e01\u0e04\u0e23\u0e31\u0e49\u0e07 : {1}
unknownErrorRewritingImg=\u0e40\u0e01\u0e34\u0e14\u0e02\u0e49\u0e2d\u0e1c\u0e34\u0e14\u0e1e\u0e25\u0e32\u0e14\u0e15\u0e48\u0e2d\u0e44\u0e1b\u0e19\u0e35\u0e49\u0e02\u0e36\u0e49\u0e19\u0e40\u0e21\u0e37\u0e48\u0e2d\u0e40\u0e02\u0e35\u0e22\u0e19\u0e2d\u0e34\u0e21\u0e40\u0e21\u0e08 {0}: {1}
failedToReadImg=\u0e2d\u0e34\u0e21\u0e40\u0e21\u0e08 {0} \u0e44\u0e21\u0e48\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e2d\u0e48\u0e32\u0e19\u0e44\u0e14\u0e49\u0e41\u0e25\u0e30\u0e16\u0e39\u0e01\u0e02\u0e49\u0e32\u0e21 \u0e40\u0e01\u0e34\u0e14\u0e02\u0e49\u0e2d\u0e1c\u0e34\u0e14\u0e1e\u0e25\u0e32\u0e14\u0e15\u0e48\u0e2d\u0e44\u0e1b\u0e19\u0e35\u0e49\u0e02\u0e36\u0e49\u0e19: {1}

##CssResponseRewriter
cajaCssParseFailure=\u0e40\u0e01\u0e34\u0e14\u0e02\u0e49\u0e2d\u0e1c\u0e34\u0e14\u0e1e\u0e25\u0e32\u0e14\u0e15\u0e48\u0e2d\u0e44\u0e1b\u0e19\u0e35\u0e49\u0e02\u0e36\u0e49\u0e19\u0e40\u0e21\u0e37\u0e48\u0e2d\u0e27\u0e34\u0e40\u0e04\u0e23\u0e32\u0e30\u0e2b\u0e4c\u0e04\u0e33 Caja CSS: {0} \u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a {1}

##ImageAttributeRewriter
unableToProcessImg=\u0e44\u0e21\u0e48\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e14\u0e33\u0e40\u0e19\u0e34\u0e19\u0e01\u0e32\u0e23\u0e01\u0e31\u0e1a\u0e23\u0e35\u0e0b\u0e2d\u0e23\u0e4c\u0e2a\u0e02\u0e2d\u0e07\u0e2d\u0e34\u0e21\u0e40\u0e21\u0e08 {0} \u0e44\u0e14\u0e49
unableToReadResponse=\u0e44\u0e21\u0e48\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e2d\u0e48\u0e32\u0e19\u0e01\u0e32\u0e23\u0e15\u0e2d\u0e1a\u0e01\u0e25\u0e31\u0e1a\u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a\u0e23\u0e35\u0e0b\u0e2d\u0e23\u0e4c\u0e2a\u0e02\u0e2d\u0e07\u0e2d\u0e34\u0e21\u0e40\u0e21\u0e08 {0} \u0e44\u0e14\u0e49
unableToFetchImg=\u0e44\u0e21\u0e48\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e14\u0e36\u0e07\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e23\u0e35\u0e0b\u0e2d\u0e23\u0e4c\u0e2a\u0e02\u0e2d\u0e07\u0e2d\u0e34\u0e21\u0e40\u0e21\u0e08 {0} \u0e44\u0e14\u0e49
unableToParseImg=\u0e44\u0e21\u0e48\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e27\u0e34\u0e40\u0e04\u0e23\u0e32\u0e30\u0e2b\u0e4c\u0e04\u0e33\u0e23\u0e35\u0e0b\u0e2d\u0e23\u0e4c\u0e2a\u0e02\u0e2d\u0e07\u0e2d\u0e34\u0e21\u0e40\u0e21\u0e08 {0} \u0e44\u0e14\u0e49

##MutableContent
exceptionParsingContent=\u0e40\u0e01\u0e34\u0e14\u0e02\u0e49\u0e2d\u0e22\u0e01\u0e40\u0e27\u0e49\u0e19\u0e02\u0e36\u0e49\u0e19\u0e02\u0e13\u0e30\u0e27\u0e34\u0e40\u0e04\u0e23\u0e32\u0e30\u0e2b\u0e4c\u0e04\u0e33\u0e40\u0e19\u0e37\u0e49\u0e2d\u0e2b\u0e32\u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a\u0e41\u0e01\u0e14\u0e40\u0e08\u0e47\u0e15

##PipelineDataGadgetRewriter
failedToParsePreload=\u0e44\u0e21\u0e48\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e27\u0e34\u0e40\u0e04\u0e23\u0e32\u0e30\u0e2b\u0e4c\u0e04\u0e33\u0e41\u0e01\u0e14\u0e40\u0e08\u0e47\u0e15\u0e17\u0e35\u0e48 {0} \u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a\u0e01\u0e32\u0e23\u0e42\u0e2b\u0e25\u0e14\u0e01\u0e48\u0e2d\u0e19\u0e44\u0e14\u0e49

##ProxyingVisitor
uriExceptionParsing=\u0e40\u0e01\u0e34\u0e14\u0e02\u0e49\u0e2d\u0e22\u0e01\u0e40\u0e27\u0e49\u0e19\u0e40\u0e01\u0e35\u0e48\u0e22\u0e27\u0e01\u0e31\u0e1a Uniform Resource Identifier (URI) \u0e40\u0e21\u0e37\u0e48\u0e2d\u0e27\u0e34\u0e40\u0e04\u0e23\u0e32\u0e30\u0e2b\u0e4c\u0e04\u0e33\u0e41\u0e01\u0e14\u0e40\u0e08\u0e47\u0e15\u0e17\u0e35\u0e48 {0}

##TemplateRewriter
malformedTemplateLib=\u0e40\u0e01\u0e34\u0e14\u0e02\u0e49\u0e2d\u0e22\u0e01\u0e40\u0e27\u0e49\u0e19\u0e02\u0e36\u0e49\u0e19\u0e40\u0e19\u0e37\u0e48\u0e2d\u0e07\u0e08\u0e32\u0e01\u0e44\u0e25\u0e1a\u0e23\u0e32\u0e23\u0e35\u0e40\u0e17\u0e47\u0e21\u0e40\u0e1e\u0e25\u0e15\u0e1c\u0e34\u0e14\u0e23\u0e39\u0e1b\u0e41\u0e1a\u0e1a

##CajaContnetRewriter
cajoledCacheCreated=\u0e41\u0e04\u0e0a\u0e17\u0e35\u0e48\u0e16\u0e39\u0e01\u0e42\u0e19\u0e49\u0e21\u0e19\u0e49\u0e32\u0e27\u0e16\u0e39\u0e01\u0e2a\u0e23\u0e49\u0e32\u0e07\u0e02\u0e36\u0e49\u0e19
retrieveReference={0} \u0e01\u0e33\u0e25\u0e31\u0e07\u0e16\u0e39\u0e01\u0e14\u0e36\u0e07\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25
unableToCajole=\u0e44\u0e21\u0e48\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e42\u0e19\u0e49\u0e21\u0e19\u0e49\u0e32\u0e27\u0e41\u0e01\u0e14\u0e40\u0e08\u0e47\u0e15\u0e17\u0e35\u0e48 {0} \u0e44\u0e14\u0e49

##ConcatProxyServlet
concatProxyRequestFailed=\u0e40\u0e01\u0e34\u0e14\u0e02\u0e49\u0e2d\u0e1c\u0e34\u0e14\u0e1e\u0e25\u0e32\u0e14\u0e15\u0e48\u0e2d\u0e44\u0e1b\u0e19\u0e35\u0e49\u0e40\u0e21\u0e37\u0e48\u0e2d\u0e23\u0e49\u0e2d\u0e07\u0e02\u0e2d\u0e1e\u0e23\u0e47\u0e2d\u0e01\u0e0b\u0e35\u0e41\u0e1a\u0e1a\u0e15\u0e48\u0e2d\u0e40\u0e19\u0e37\u0e48\u0e2d\u0e07: {0}

##GadgetRenderingServlet
malformedTtlValue=\u0e04\u0e48\u0e32 Time To Live (TTL) \u0e17\u0e35\u0e48\u0e44\u0e21\u0e48\u0e16\u0e39\u0e01\u0e15\u0e49\u0e2d\u0e07\u0e02\u0e2d\u0e07 {0} \u0e16\u0e39\u0e01\u0e25\u0e30\u0e40\u0e27\u0e49\u0e19

##HttpRequestHandler
gadgetCreationError=\u0e40\u0e01\u0e34\u0e14\u0e02\u0e49\u0e2d\u0e1c\u0e34\u0e14\u0e1e\u0e25\u0e32\u0e14\u0e23\u0e30\u0e2b\u0e27\u0e48\u0e32\u0e07\u0e01\u0e32\u0e23\u0e2a\u0e23\u0e49\u0e32\u0e07 gadget \u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a\u0e01\u0e32\u0e23\u0e40\u0e02\u0e35\u0e22\u0e19\u0e43\u0e2b\u0e21\u0e48  \u0e01\u0e32\u0e23\u0e40\u0e02\u0e35\u0e22\u0e19\u0e01\u0e32\u0e23\u0e15\u0e2d\u0e1a\u0e01\u0e25\u0e31\u0e1a\u0e43\u0e2b\u0e21\u0e48\u0e42\u0e14\u0e22\u0e44\u0e21\u0e48\u0e21\u0e35 gadget

##ProxyServlet
embededImgWrongDomain=\u0e04\u0e33\u0e23\u0e49\u0e2d\u0e07\u0e02\u0e2d\u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e1d\u0e31\u0e07 {0} URL \u0e16\u0e39\u0e01\u0e17\u0e33\u0e43\u0e2b\u0e49\u0e1c\u0e34\u0e14\u0e42\u0e14\u0e40\u0e21\u0e19 {1}

##DefaultTemplateProcessor
elFailure=\u0e40\u0e01\u0e34\u0e14\u0e02\u0e49\u0e2d\u0e1c\u0e34\u0e14\u0e1e\u0e25\u0e32\u0e14 EL \u0e15\u0e48\u0e2d\u0e44\u0e1b\u0e19\u0e35\u0e49\u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a\u0e41\u0e01\u0e14\u0e40\u0e08\u0e47\u0e15\u0e17\u0e35\u0e48 {0}: {1}

##UriUtils
skipIllegalHeader=\u0e2a\u0e48\u0e27\u0e19\u0e2b\u0e31\u0e27 {0} \u0e1c\u0e34\u0e14\u0e01\u0e0e\u0e40\u0e01\u0e13\u0e11\u0e4c\u0e41\u0e25\u0e30\u0e16\u0e39\u0e01\u0e02\u0e49\u0e32\u0e21 \u0e40\u0e01\u0e34\u0e14\u0e02\u0e49\u0e2d\u0e1c\u0e34\u0e14\u0e1e\u0e25\u0e32\u0e14\u0e15\u0e48\u0e2d\u0e44\u0e1b\u0e19\u0e35\u0e49: {1}

##AbstractSpecFactory
updateSpecFailureUseCacheVersion=\u0e40\u0e01\u0e34\u0e14\u0e02\u0e49\u0e2d\u0e1c\u0e34\u0e14\u0e1e\u0e25\u0e32\u0e14\u0e02\u0e36\u0e49\u0e19\u0e02\u0e13\u0e30\u0e2d\u0e31\u0e1e\u0e40\u0e14\u0e15 {0} \u0e42\u0e04\u0e49\u0e14\u0e2a\u0e16\u0e32\u0e19\u0e30 {1} \u0e16\u0e39\u0e01\u0e2a\u0e48\u0e07\u0e04\u0e37\u0e19 \u0e02\u0e49\u0e2d\u0e22\u0e01\u0e40\u0e27\u0e49\u0e19: {2} \u0e40\u0e27\u0e2d\u0e23\u0e4c\u0e0a\u0e31\u0e19\u0e17\u0e35\u0e48\u0e41\u0e04\u0e0a\u0e41\u0e25\u0e49\u0e27\u0e08\u0e30\u0e16\u0e39\u0e01\u0e43\u0e0a\u0e49\u0e41\u0e17\u0e19
updateSpecFailureApplyNegCache=\u0e40\u0e01\u0e34\u0e14\u0e02\u0e49\u0e2d\u0e1c\u0e34\u0e14\u0e1e\u0e25\u0e32\u0e14\u0e02\u0e36\u0e49\u0e19\u0e02\u0e13\u0e30\u0e2d\u0e31\u0e1e\u0e40\u0e14\u0e15 {0} \u0e42\u0e04\u0e49\u0e14\u0e2a\u0e16\u0e32\u0e19\u0e30 {1} \u0e16\u0e39\u0e01\u0e2a\u0e48\u0e07\u0e04\u0e37\u0e19 \u0e02\u0e49\u0e2d\u0e22\u0e01\u0e40\u0e27\u0e49\u0e19: {2} \u0e41\u0e04\u0e0a\u0e17\u0e35\u0e48\u0e15\u0e34\u0e14\u0e04\u0e48\u0e32\u0e25\u0e1a\u0e01\u0e33\u0e25\u0e31\u0e07\u0e16\u0e39\u0e01\u0e43\u0e0a\u0e49

##HashLockedDomainService
noLockedDomainConfig=\u0e04\u0e2d\u0e19\u0e1f\u0e34\u0e01\u0e39\u0e40\u0e23\u0e0a\u0e31\u0e19\u0e02\u0e2d\u0e07\u0e42\u0e14\u0e40\u0e21\u0e19\u0e17\u0e35\u0e48\u0e25\u0e47\u0e2d\u0e01\u0e44\u0e27\u0e49\u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a {0} \u0e44\u0e21\u0e48\u0e21\u0e35\u0e2d\u0e22\u0e39\u0e48

##Bootstrap
startingConnManagerWith=\u0e1c\u0e39\u0e49\u0e08\u0e31\u0e14\u0e01\u0e32\u0e23\u0e40\u0e0a\u0e37\u0e48\u0e2d\u0e21\u0e15\u0e48\u0e2d\u0e14\u0e49\u0e27\u0e22\u0e04\u0e38\u0e13\u0e2a\u0e21\u0e1a\u0e31\u0e15\u0e34 {0} \u0e01\u0e33\u0e25\u0e31\u0e07\u0e40\u0e23\u0e34\u0e48\u0e21\u0e17\u0e33\u0e07\u0e32\u0e19

##XSDValidator
resolveResource=\u0e23\u0e35\u0e0b\u0e2d\u0e23\u0e4c\u0e2a\u0e15\u0e48\u0e2d\u0e44\u0e1b\u0e19\u0e35\u0e49\u0e01\u0e33\u0e25\u0e31\u0e07\u0e16\u0e39\u0e01\u0e41\u0e01\u0e49\u0e1b\u0e31\u0e0d\u0e2b\u0e32: {0}, {1}, {2}, {3}
failedToValidate=\u0e40\u0e01\u0e34\u0e14\u0e02\u0e49\u0e2d\u0e1c\u0e34\u0e14\u0e1e\u0e25\u0e32\u0e14\u0e02\u0e13\u0e30\u0e15\u0e23\u0e27\u0e08\u0e2a\u0e2d\u0e1a\u0e04\u0e27\u0e32\u0e21\u0e16\u0e39\u0e01\u0e15\u0e49\u0e2d\u0e07 {0}

##DefaultRequestPipeline
cachedResponse=\u0e2a\u0e48\u0e07\u0e04\u0e37\u0e19\u0e01\u0e32\u0e23\u0e15\u0e2d\u0e1a\u0e01\u0e25\u0e31\u0e1a\u0e17\u0e35\u0e48\u0e41\u0e04\u0e0a\u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a\u0e01\u0e32\u0e23\u0e23\u0e49\u0e2d\u0e07\u0e02\u0e2d\u0e44\u0e1b\u0e22\u0e31\u0e07 {0}
staleResponse="\u0e40\u0e01\u0e34\u0e14\u0e02\u0e49\u0e2d\u0e1c\u0e34\u0e14\u0e1e\u0e25\u0e32\u0e14\u0e43\u0e19\u0e01\u0e32\u0e23\u0e23\u0e49\u0e2d\u0e07\u0e02\u0e2d\u0e23\u0e35\u0e0b\u0e2d\u0e23\u0e4c\u0e2a\u0e17\u0e35\u0e48 {0} \u0e41\u0e15\u0e48\u0e40\u0e23\u0e32\u0e21\u0e35\u0e01\u0e32\u0e23\u0e15\u0e2d\u0e1a\u0e01\u0e25\u0e31\u0e1a\u0e01\u0e48\u0e2d\u0e19\u0e2b\u0e19\u0e49\u0e32\u0e43\u0e19\u0e41\u0e04\u0e0a  \u0e2a\u0e48\u0e07\u0e04\u0e37\u0e19\u0e01\u0e32\u0e23\u0e15\u0e2d\u0e1a\u0e01\u0e25\u0e31\u0e1a\u0e17\u0e35\u0e48\u0e2d\u0e32\u0e08\u0e04\u0e49\u0e32\u0e07\u0e2d\u0e22\u0e39\u0e48\u0e08\u0e32\u0e01\u0e41\u0e04\u0e0a
