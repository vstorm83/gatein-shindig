# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
# NLS_ENCODING=UNICODE
## G11N SA UI
# NLS_MESSAGEFORMAT_VAR


##AuthenticationServletFilter
errorParsingSecureToken=The security token or credential is malformed and cannot be parsed.

##XmlUtil
errorParsingXML=Error parsing the XML. This can be ignored.
errorParsingExternalGeneralEntities=The XML processor being used will load external general entities.
errorParsingExternalParameterEntities=The XML processor being used will load external parameter entities.
errorParsingExternalDTD=The XML processor being used will load Document Type Definitions (DTD).
errorNotUsingSecureXML=The XML processor being used does not support secure parsing.
reuseDocumentBuilders=Document builders are being reused.
notReuseDocBuilders=Document builders are not being reused.

##LruCacheProvider
LRUCapacity=The least recently used (LRU) capacity {0} is configured for {1}.

##DynamicConfigProperty
evalExpressionFailed={0} cannot be evaluated.

##JsonContainerConfigLoader
readingContainerConfig=Container configuration {0} is being read.
loadFromString={0} cannot be parsed.

##JsonContainerConfigLoader, FeatureRegistry
loadResourcesFrom=Resources from {0} are loading.

##JsonContainerConfigLoader, FeatureRegistry
loadFilesFrom=Files from {0} are loading.

##ApiServlet
apiServletProtocolException=A response error is being returned because a protocol exception occurred.
apiServletException=A response error is being returned because a protocol exception occurred.occurred.

##FeatureRegistry
overridingFeature=The {0} feature with definition at {1} is being overridden.

##FeatureResourceLoader
missingFile=The file {0} used to exist but is now missing.
unableRetrieveLib=The remote library from {0} cannot be retrieved.

##BasicHttpFetcher
timeoutException={0} has timed out because of the following exception: {1} - {2} - {3} ms.
exceptionOccurred=The following exception occurred when fetching {0}: {1} ms elapsed.
slowResponse={0} is responding slowly. {1} ms elapsed.

##HttpResponseMetadataHelper
errorGettingMD5=An error occurred when getting Message Digest 5 (MD5). The error was ignored.
errorParsingMD5=An error occurred when parsing the Message Digest 5 (MD5) string in UTF-8 format.

##OAuthModule
usingRandomKey=A random key for OAuth client-side state encryption is being used.
usingFile=The {0} file for OAuth client-side state encryption is being used.
loadKeyFileFrom=The OAuth signing key from {0} is loading.
couldNotLoadKeyFile= The {0} key file could not be loaded.
couldNotLoadSignedKey=The OAuth signing key did not load correctly. To create a key: \n 1. Run the following command: \n openssl req -newkey rsa:1024 -days 365 -nodes -x509 -keyout testkey.pem \\\n -out testkey.pem -subj ''/CN=mytestkey''\n openssl pkcs8 -in testkey.pem -out oauthkey.pem -topk8 -nocrypt -outform PEM\n\n. 2. Edit the shindig.properties file by adding these lines: \n{0} =<path-to-oauthkey.pem>\n {1} =mykey\n.
failedToInit=OAuth consumers from {0} failed to initialize.

##OAuthRequest
oauthFetchFatalError=The following fatal error occurred when OAuth was fetching content: \n {0}.
oauthFetchErrorReprompt=The following error occurred when OAuth was fetching content: \n {0}. The user is being reprompted for approval.
bogusExpired=The server returned an invalid expiration:\n {0}.
oauthFetchUnexpectedError=The following fatal error occurred when OAuth was fetching content: \n {0}.
unauthenticatedOauth=OAuth cannot fetch content because the user authentication does not exist. The following error occurred: \n {0}.
invalidOauth=OAuth cannot fetch content because the request is invalid. The following error occurred: \n {0}.

##CajaCssSanitizer
failedToParse=The style sheet cannot be parsed.
unableToConvertScript=The script node cannot be converted to an OpenSocial Markup Language (OSML) tag.

##PipelineExecutor
errorPreloading=An unexpected error occurred when preloading.

##Processor
renderBlacklistedGadget=The system attempted to render the following blacklisted gadget: {0}.

##CajaResponseRewriter, CajaContentRewriter
failedToRetrieve={0} cannot be retrieved.
failedToRead={0} cannot be read.

##DefaultServiceFetcher
httpErrorFetching=An HTTP {0} error occurred when fetching service methods from the {1} endpoint.
failedToFetchService=Services methods from the {0} endpoint could not be fetched. The following error occurred: {1}.
failedToParseService=Services methods from the {0} endpoint could not be parsed. The following error occurred: {1}.

##Renderer
FailedToRender=The gadget at {0} did not render. The following error occurred: {1}.

##RenderingGadgetRewriter
unknownFeatures=One or more unknown features exist in the following extern &libs=: {0}.
unexpectedErrorPreloading=An unexpected error occurred when preloading the gadget.

##SanitizingResponseRewriter
requestToSanitizeWithoutContent=A request to sanitize was issued without a content type for {0}.
requestToSanitizeUnknownContent=A request to sanitize was issued without a known content type {0} for {1}.
unableToSanitizeUnknownImg=The image type {0} is unknown and cannot be sanitized.
unableToDetectImgType=The image type for {0} cannot be detected when sanitizing content.

##BasicImageRewriter
ioErrorRewritingImg=The following input/output error occurred when rewriting the {0} image: {1}.
unknownErrorRewritingImg=The following error occurred when rewriting the {0} image: {1}.
failedToReadImg=The {0} image cannot be read and is being skipped. The following error occurred: {1}.

##CssResponseRewriter
cajaCssParseFailure=The following error occurred when parsing the Caja CSS: {0} for {1}.

##ImageAttributeRewriter
unableToProcessImg=The {0} image resource cannot be processed.
unableToReadResponse=The response for the {0} image resource cannot be read.
unableToFetchImg=The {0} image resource cannot be fetched.
unableToParseImg=The {0} image resource cannot be parsed.

##MutableContent
exceptionParsingContent=An exception occurred when parsing content for the gadget.

##PipelineDataGadgetRewriter
failedToParsePreload=The gadget at {0} could not be parsed for preloading.

##ProxyingVisitor
uriExceptionParsing=A Uniform Resource Identifier (URI) exception occurred when parsing the gadget at {0}.

##TemplateRewriter
malformedTemplateLib=Exceptions occurred because of malformed template libraries.

##CajaContnetRewriter
cajoledCacheCreated=A cajoled cache was created.
retrieveReference={0} is being retrieved.
unableToCajole=The gadget at {0} cannot be cajoled.

##ConcatProxyServlet
concatProxyRequestFailed=The following error occurred when requesting a concatenated proxy: {0}.

##GadgetRenderingServlet
malformedTtlValue=An invalid Time To Live (TTL) value of {0} was ignored.

##HttpRequestHandler
gadgetCreationError=An error occurred creating the gadget for rewriting.  Rewriting the response without the gadget.

##ProxyServlet
embededImgWrongDomain=The request to embed the {0} URL was made to the wrong domain {1}.

##DefaultTemplateProcessor
elFailure=The following EL error occurred for the gadget at {0}: {1}.

##UriUtils
skipIllegalHeader=The {0} header is illegal and is being skipped. The following error occurred: {1}.

##AbstractSpecFactory
updateSpecFailureUseCacheVersion=An error occurred when updating {0}. Status code {1} was returned. Exception: {2}. A cached version is being used instead.
updateSpecFailureApplyNegCache=An error occurred when updating {0}. Status code {1} was returned. Exception: {2}. A negative cache is being applied.

##HashLockedDomainService
noLockedDomainConfig=A locked domain configuration for {0} does not exist.

##Bootstrap
startingConnManagerWith=Connection manager with {0} properties is starting.

##XSDValidator
resolveResource=The following resources are being resolved: {0}, {1}, {2}, {3}.
failedToValidate=An error occurred when validating {0}.

##DefaultRequestPipeline
cachedResponse=Returning cached response for the request to {0}.
staleResponse="There was an error requesting the resource at {0} but we have a prior response in the cache.  Returning a possibly stale response from the cache.
